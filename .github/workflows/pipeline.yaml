---
name: Build and verify image

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - 'README.md'
      - 'docker-compose.yml'
      - '.gitignore'
      - '.github/linters*'
      - '.github/workflows/reusable-super-linter.yaml'
    branches:
      - 'main'
      - 'feature/*'
    tags:
      - '[0-9]+.[0-9]+-[0-9]+'
  pull_request:

jobs:

  super-linter:
    name: Super-Linter
    if: github.event_name == 'pull_request' || startsWith(github.ref, 'refs/heads/feature/')

    concurrency:
      group: ${{ github.workflow }}-${{ github.job }}-${{ github.ref }}
      cancel-in-progress: true

    permissions:
      contents: read
      statuses: write

    uses: ./.github/workflows/reusable-super-linter.yaml

  build-test-image:
    name: Build Image for Testing
    runs-on: ubuntu-latest

    concurrency:
      group: ${{ github.workflow }}-${{ github.job }}-${{ github.ref }}
      cancel-in-progress: true

    permissions:
      packages: write

    steps:

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push to GHCR
        uses: docker/build-push-action@v3
        with:
          pull: true
          push: true
          tags: ghcr.io/meyayl/languagetool:${{ github.run_id }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  integration-test-image:
    name: Integration test Image
    needs: [ build-test-image ]
    runs-on: ubuntu-latest

    concurrency:
      group: ${{ github.workflow }}-${{ github.job }}-${{ github.ref }}
      cancel-in-progress: true

    permissions:
      packages: read

    steps:

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Test Image
        run: |
          docker run --name=test --rm -d -p 127.0.0.1:8010:8010 --platform=linux/amd64 meyay/languagetool:${{ github.run_id }}
          sleep 10s
          docker logs test
          docker exec test /opt/java/customjre/bin/java --version
          docker exec test /entrypoint.sh help
          docker exec test /usr/local/bin/fasttext || true
          curl --data "language=en-US&text=a simple test" http://127.0.0.1:8010/v2/check | tee /dev/stderr | grep -q detectedLanguage
          docker stop test

  scan-image:
    name: Scan Image with Trivy
    needs: [ build-test-image ]
    runs-on: ubuntu-latest

    concurrency:
      group: ${{ github.workflow }}-${{ github.job }}-${{ github.ref }}
      cancel-in-progress: true

    permissions:
      contents: read
      packages: read

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull image to scan
        run: docker pull ghcr.io/meyayl/languagetool:${{ github.run_id }}

      - name: Run Trivy for all CVEs (non-blocking)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/meyayl/languagetool:${{ github.run_id }}
          exit-code: 0
          format: table

  cve-check-image-and-report:
    name: Build Image
    if: github.event_name == 'pull_request'
    needs: [ build-test-image ]
    runs-on: ubuntu-latest

    concurrency:
      group: ${{ github.workflow }}-${{ github.job }}-${{ github.ref }}
      cancel-in-progress: true

    permissions:
      contents: read
      packages: read
      security-events: write

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull image to scan
        run: docker pull ghcr.io/meyayl/languagetool:${{ github.run_id }}

      - name: Run Trivy for HIGH,CRITICAL CVEs and report
        uses: aquasecurity/trivy-action@master
        if: startsWith(github.ref, 'refs/tags/')
        with:
          image-ref: ghcr.io/meyay/languagetool:${{ github.run_id }}
          exit-code: 1
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'HIGH,CRITICAL'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results.sarif'

  update-pr:
    name: Update PullRequest
    needs: [ super-linter, build-test-image, integration-test-image, cve-check-image, cve-check-image-and-report ]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    permissions:
      pull-requests: write

    steps:
      - name: Find comment for image tags
        uses: peter-evans/find-comment@v1
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Docker image tag(s) pushed
        
        # If PR, put image tags in the PR comments
      - name: Create or update comment for image tags
        uses: peter-evans/create-or-update-comment@v1
        if: github.event_name == 'pull_request'
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Docker image tag(s) pushed:
            ```text
            ${{ steps.docker_meta.outputs.tags }}
            ```

            Labels added to images:
            ```text
            ${{ steps.docker_meta.outputs.labels }}
            ```
          edit-mode: replace

  build-and-push-final-image:
    name: Build and push final image
    needs: [ super-linter, build-test-image, integration-test-image, cve-check-image ]
    runs-on: ubuntu-latest
    #if: github.ref == 'refs/heads/main'
    if: github.ref == refs(github.ref, 'refs/tags/')

    permissions:
      packages: write # needed to push docker image to ghcr.io
      pull-requests: write # needed to create and update comments in PRs

    steps:

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: meyay/languagetool
          tags: |
            type=ref,event=tag
            type=raw,pattern={{raw}}
            type=match,pattern=\d+.\d+

      - name: Push to DockerHub
        uses: docker/build-push-action@v3
        with:
          push: false
          platforms: linux/amd64
          cache-from: type=gha
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}

      - name: Update repo description
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: meyay/languagetool
